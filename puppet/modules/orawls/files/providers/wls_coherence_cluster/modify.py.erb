# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name                    = '<%= coherence_cluster_name %>'

clusteringmode          = '<%= clusteringmode %>'

multicastaddress        = '<%= multicastaddress %>'
multicastport           = '<%= multicastport %>'
unicastaddress          = '<%= unicastaddress %>'
unicastport             = '<%= unicastport %>'
target                  = '<%= target %>'
targettype              = '<%= targettype %>'
storage_enabled         = '<%= storage_enabled %>'

edit()
startEdit()

try:

    cd('/')

    coherence_cluster = getMBean('/CoherenceClusterSystemResources/'+name)

    cd('/CoherenceClusterSystemResources/'+name+'/CoherenceClusterResource/'+name+'/CoherenceClusterParams/'+name)

    set('ClusteringMode',clusteringmode)

    if multicastaddress:
       set('MulticastListenAddress',multicastaddress)

    if multicastport:
       set('MulticastListenPort',multicastport)

    if unicastaddress:
       set('UnicastListenAddress',unicastaddress)

    if unicastport:
       set('UnicastListenPort',unicastport)

    print "target: "     +  target
    print "targettype: " +  targettype

    targets     = String(target).split(",")
    targettypes = String(targettype).split(",")
    targetList  = []
    for i in range(len(targets)):
      print "target "+targets[i] + " " + targettypes[i]

      if targettypes[i] == "Cluster":
        target_path = "/Clusters/"+targets[i]
      else:
        target_path = "/Servers/"+targets[i]

      target_mbean = getMBean(target_path)
      print target_mbean
      target_mbean.setCoherenceClusterSystemResource(coherence_cluster)

      if int(storage_enabled) == 1:
        target_mbean.getCoherenceTier().setLocalStorageEnabled(True)

      print "add to targetlist"
      targetList.append( ObjectName('com.bea:Name=' + targets[i] + ',Type='+targettypes[i]) )

    cd('/CoherenceClusterSystemResources/'+name)
    set('Targets',jarray.array(targetList, ObjectName))


    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise

